from PIL import Image
import os

IMAGE_DIR = "output3"
OUTPUT_FILE = "test.txt"
IMAGE_WIDTH = 9
IMAGE_HEIGHT = 14


def process_image(file_path):
    """Process a single image file to create a C array where each pixel is stored separately."""
    img = Image.open(file_path).convert("RGB")
    pixels = img.load()

    array = []

    for y in range(IMAGE_HEIGHT):
        for x in range(IMAGE_WIDTH):
            r, g, b = pixels[x, y]
            hex_value = "0x{:02X}{:02X}{:02X}".format(r, g, b)
            array.append(hex_value)

    return array


def escape_character(c):
    """Escape special characters for C string representation."""
    escape_dict = {
        "'": r"\'",  
        "\\": r"\\",  
        "\n": r"\n", 
        "\t": r"\t",  
        "\r": r"\r",  
        "\b": r"\b",  
        "\f": r"\f", 
        "\v": r"\v",  
    }

    if ord(c) < 32 or ord(c) == 127:
        return f"\\x{ord(c):02x}"

    return escape_dict.get(c, c)


def generate_c_struct_entry(character, data):
    """Generate a FontCharacter struct entry for the character."""
    escaped_char = escape_character(character)
    char_data = ", ".join(data)

    return f"    '{escaped_char}':  {{width: {IMAGE_WIDTH}, height: {IMAGE_HEIGHT}, data: []int{{{char_data}}}}} ,\n"


def main():
    image_files = sorted(
        [f for f in os.listdir(IMAGE_DIR) if f.endswith(".png")],
        key=lambda x: int(x.split(".")[0]),
    )

    with open(OUTPUT_FILE, "w") as f:
        f.write('#include "font_arrays.h"\n\n')

        f.write("FontCharacter font_characters[CHARSET_SIZE] = {\n")

        for image_file in image_files:
            char_code = int(image_file.split(".")[0])
            character = chr(char_code)
            array_data = process_image(os.path.join(IMAGE_DIR, image_file))
            c_struct_entry = generate_c_struct_entry(character, array_data)
            f.write(c_struct_entry)

        f.write(
            "    ' ': {width: 9, height: 14, data: []int {0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000}},"
        )
        f.write("\n")
        f.write(
            "    1: {width: 9, height: 14, data: []int {0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0x000000, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0x000000, 0xFFFFFF, 0x000000, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF}},"
        )
        f.write("};\n\n")

    print(f"Font arrays written to {OUTPUT_FILE}")


if __name__ == "__main__":
    main()
